<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LibMaterial', 'doctrine');

/**
 * BaseLibMaterial
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_lib_material
 * @property string $codigo_lib_material
 * @property string $titulo
 * @property string $sub_titulo
 * @property string $autores
 * @property string $editorial
 * @property date $fecha_publicacion
 * @property date $fecha_actualizacion
 * @property string $descripcion
 * @property string $temas
 * @property integer $is_referencia
 * @property integer $is_solo_profesor
 * @property integer $is_prestado
 * @property string $codigo_lib_categoria
 * @property integer $id_lib_tipo_material
 * @property LibCategoria $LibCategoria
 * @property LibTipoMaterial $LibTipoMaterial
 * @property Doctrine_Collection $LibItem
 * 
 * @method integer             getIdLibMaterial()        Returns the current record's "id_lib_material" value
 * @method string              getCodigoLibMaterial()    Returns the current record's "codigo_lib_material" value
 * @method string              getTitulo()               Returns the current record's "titulo" value
 * @method string              getSubTitulo()            Returns the current record's "sub_titulo" value
 * @method string              getAutores()              Returns the current record's "autores" value
 * @method string              getEditorial()            Returns the current record's "editorial" value
 * @method date                getFechaPublicacion()     Returns the current record's "fecha_publicacion" value
 * @method date                getFechaActualizacion()   Returns the current record's "fecha_actualizacion" value
 * @method string              getDescripcion()          Returns the current record's "descripcion" value
 * @method string              getTemas()                Returns the current record's "temas" value
 * @method integer             getIsReferencia()         Returns the current record's "is_referencia" value
 * @method integer             getIsSoloProfesor()       Returns the current record's "is_solo_profesor" value
 * @method integer             getIsPrestado()           Returns the current record's "is_prestado" value
 * @method string              getCodigoLibCategoria()   Returns the current record's "codigo_lib_categoria" value
 * @method integer             getIdLibTipoMaterial()    Returns the current record's "id_lib_tipo_material" value
 * @method LibCategoria        getLibCategoria()         Returns the current record's "LibCategoria" value
 * @method LibTipoMaterial     getLibTipoMaterial()      Returns the current record's "LibTipoMaterial" value
 * @method Doctrine_Collection getLibItem()              Returns the current record's "LibItem" collection
 * @method LibMaterial         setIdLibMaterial()        Sets the current record's "id_lib_material" value
 * @method LibMaterial         setCodigoLibMaterial()    Sets the current record's "codigo_lib_material" value
 * @method LibMaterial         setTitulo()               Sets the current record's "titulo" value
 * @method LibMaterial         setSubTitulo()            Sets the current record's "sub_titulo" value
 * @method LibMaterial         setAutores()              Sets the current record's "autores" value
 * @method LibMaterial         setEditorial()            Sets the current record's "editorial" value
 * @method LibMaterial         setFechaPublicacion()     Sets the current record's "fecha_publicacion" value
 * @method LibMaterial         setFechaActualizacion()   Sets the current record's "fecha_actualizacion" value
 * @method LibMaterial         setDescripcion()          Sets the current record's "descripcion" value
 * @method LibMaterial         setTemas()                Sets the current record's "temas" value
 * @method LibMaterial         setIsReferencia()         Sets the current record's "is_referencia" value
 * @method LibMaterial         setIsSoloProfesor()       Sets the current record's "is_solo_profesor" value
 * @method LibMaterial         setIsPrestado()           Sets the current record's "is_prestado" value
 * @method LibMaterial         setCodigoLibCategoria()   Sets the current record's "codigo_lib_categoria" value
 * @method LibMaterial         setIdLibTipoMaterial()    Sets the current record's "id_lib_tipo_material" value
 * @method LibMaterial         setLibCategoria()         Sets the current record's "LibCategoria" value
 * @method LibMaterial         setLibTipoMaterial()      Sets the current record's "LibTipoMaterial" value
 * @method LibMaterial         setLibItem()              Sets the current record's "LibItem" collection
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLibMaterial extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lib_material');
        $this->hasColumn('id_lib_material', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('codigo_lib_material', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('titulo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('sub_titulo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('autores', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('editorial', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fecha_publicacion', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_actualizacion', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('temas', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('is_referencia', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_solo_profesor', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_prestado', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('codigo_lib_categoria', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('id_lib_tipo_material', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LibCategoria', array(
             'local' => 'codigo_lib_categoria',
             'foreign' => 'codigo_lib_categoria'));

        $this->hasOne('LibTipoMaterial', array(
             'local' => 'id_lib_tipo_material',
             'foreign' => 'id_lib_tipo_material'));

        $this->hasMany('LibItem', array(
             'local' => 'id_lib_material',
             'foreign' => 'id_lib_material'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}