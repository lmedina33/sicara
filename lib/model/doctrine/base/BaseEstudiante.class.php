<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Estudiante', 'doctrine');

/**
 * BaseEstudiante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $codigo_estudiante
 * @property date $fecha_ingreso
 * @property date $fecha_retiro
 * @property integer $id_estado
 * @property integer $id_estado_secundario
 * @property integer $id_usuario
 * @property string $codigo_pensum
 * @property EstadoEstudiante $EstadoEstudiante
 * @property Pensum $Pensum
 * @property EstadoEstudiante $EstadoEstudianteSecundario
 * @property Usuario $Usuario
 * @property Doctrine_Collection $AsignaturaCursada
 * @property Doctrine_Collection $GrupoHasEstudiante
 * @property Doctrine_Collection $Matricula
 * 
 * @method string              getCodigoEstudiante()           Returns the current record's "codigo_estudiante" value
 * @method date                getFechaIngreso()               Returns the current record's "fecha_ingreso" value
 * @method date                getFechaRetiro()                Returns the current record's "fecha_retiro" value
 * @method integer             getIdEstado()                   Returns the current record's "id_estado" value
 * @method integer             getIdEstadoSecundario()         Returns the current record's "id_estado_secundario" value
 * @method integer             getIdUsuario()                  Returns the current record's "id_usuario" value
 * @method string              getCodigoPensum()               Returns the current record's "codigo_pensum" value
 * @method EstadoEstudiante    getEstadoEstudiante()           Returns the current record's "EstadoEstudiante" value
 * @method Pensum              getPensum()                     Returns the current record's "Pensum" value
 * @method EstadoEstudiante    getEstadoEstudianteSecundario() Returns the current record's "EstadoEstudianteSecundario" value
 * @method Usuario             getUsuario()                    Returns the current record's "Usuario" value
 * @method Doctrine_Collection getAsignaturaCursada()          Returns the current record's "AsignaturaCursada" collection
 * @method Doctrine_Collection getGrupoHasEstudiante()         Returns the current record's "GrupoHasEstudiante" collection
 * @method Doctrine_Collection getMatricula()                  Returns the current record's "Matricula" collection
 * @method Estudiante          setCodigoEstudiante()           Sets the current record's "codigo_estudiante" value
 * @method Estudiante          setFechaIngreso()               Sets the current record's "fecha_ingreso" value
 * @method Estudiante          setFechaRetiro()                Sets the current record's "fecha_retiro" value
 * @method Estudiante          setIdEstado()                   Sets the current record's "id_estado" value
 * @method Estudiante          setIdEstadoSecundario()         Sets the current record's "id_estado_secundario" value
 * @method Estudiante          setIdUsuario()                  Sets the current record's "id_usuario" value
 * @method Estudiante          setCodigoPensum()               Sets the current record's "codigo_pensum" value
 * @method Estudiante          setEstadoEstudiante()           Sets the current record's "EstadoEstudiante" value
 * @method Estudiante          setPensum()                     Sets the current record's "Pensum" value
 * @method Estudiante          setEstadoEstudianteSecundario() Sets the current record's "EstadoEstudianteSecundario" value
 * @method Estudiante          setUsuario()                    Sets the current record's "Usuario" value
 * @method Estudiante          setAsignaturaCursada()          Sets the current record's "AsignaturaCursada" collection
 * @method Estudiante          setGrupoHasEstudiante()         Sets the current record's "GrupoHasEstudiante" collection
 * @method Estudiante          setMatricula()                  Sets the current record's "Matricula" collection
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEstudiante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('estudiante');
        $this->hasColumn('codigo_estudiante', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('fecha_ingreso', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_retiro', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_estado', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_estado_secundario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo_pensum', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EstadoEstudiante', array(
             'local' => 'id_estado',
             'foreign' => 'id_estado_estudiante'));

        $this->hasOne('Pensum', array(
             'local' => 'codigo_pensum',
             'foreign' => 'codigo_pensum'));

        $this->hasOne('EstadoEstudiante as EstadoEstudianteSecundario', array(
             'local' => 'id_estado_secundario',
             'foreign' => 'id_estado_estudiante'));

        $this->hasOne('Usuario', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('AsignaturaCursada', array(
             'local' => 'codigo_estudiante',
             'foreign' => 'codigo_estudiante'));

        $this->hasMany('GrupoHasEstudiante', array(
             'local' => 'codigo_estudiante',
             'foreign' => 'codigo_estudiante'));

        $this->hasMany('Matricula', array(
             'local' => 'codigo_estudiante',
             'foreign' => 'codigo_estudiante'));
    }
}