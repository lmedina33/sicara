<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Usuario', 'doctrine');

/**
 * BaseUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_usuario
 * @property string $primer_nombre
 * @property string $segundo_nombre
 * @property string $primer_apellido
 * @property string $segundo_apellido
 * @property string $documento
 * @property integer $id_tipo_documento
 * @property string $lugar_expedicion
 * @property date $fecha_nacimiento
 * @property integer $genero
 * @property string $telefono1
 * @property string $telefono2
 * @property string $direccion
 * @property string $correo
 * @property string $acudiente1
 * @property string $telefono_acudiente1
 * @property string $acudiente2
 * @property string $telefono_acudiente2
 * @property string $especificaciones_medicas
 * @property string $observaciones
 * @property string $foto_path
 * @property integer $id_sf_guard_user
 * @property integer $id_tipo_sangre
 * @property TipoDocumento $TipoDocumento
 * @property TipoSangre $TipoSangre
 * @property Doctrine_Collection $AsignaturaCursada
 * @property Doctrine_Collection $Estudiante
 * @property Doctrine_Collection $FotoUsuario
 * @property Doctrine_Collection $Inscrito
 * @property Doctrine_Collection $LibPrestamo
 * @property Doctrine_Collection $LibPrestamo_2
 * @property Doctrine_Collection $LibSancion
 * @property Doctrine_Collection $LibSancion_2
 * @property Doctrine_Collection $Parcial
 * @property Doctrine_Collection $Profesor
 * @property Doctrine_Collection $UsuarioHasRefElemento
 * @property Doctrine_Collection $RefPrestamo
 * @property Doctrine_Collection $RefPrestamo_2
 * @property Doctrine_Collection $RefSancion
 * @property Doctrine_Collection $RefHojaVida
 * @property Doctrine_Collection $Notificacion
 * @property Doctrine_Collection $RefElemento
 * @property Doctrine_Collection $RefMantenimiento
 * @property Doctrine_Collection $Homologacion
 * 
 * @method integer             getIdUsuario()                Returns the current record's "id_usuario" value
 * @method string              getPrimerNombre()             Returns the current record's "primer_nombre" value
 * @method string              getSegundoNombre()            Returns the current record's "segundo_nombre" value
 * @method string              getPrimerApellido()           Returns the current record's "primer_apellido" value
 * @method string              getSegundoApellido()          Returns the current record's "segundo_apellido" value
 * @method string              getDocumento()                Returns the current record's "documento" value
 * @method integer             getIdTipoDocumento()          Returns the current record's "id_tipo_documento" value
 * @method string              getLugarExpedicion()          Returns the current record's "lugar_expedicion" value
 * @method date                getFechaNacimiento()          Returns the current record's "fecha_nacimiento" value
 * @method integer             getGenero()                   Returns the current record's "genero" value
 * @method string              getTelefono1()                Returns the current record's "telefono1" value
 * @method string              getTelefono2()                Returns the current record's "telefono2" value
 * @method string              getDireccion()                Returns the current record's "direccion" value
 * @method string              getCorreo()                   Returns the current record's "correo" value
 * @method string              getAcudiente1()               Returns the current record's "acudiente1" value
 * @method string              getTelefonoAcudiente1()       Returns the current record's "telefono_acudiente1" value
 * @method string              getAcudiente2()               Returns the current record's "acudiente2" value
 * @method string              getTelefonoAcudiente2()       Returns the current record's "telefono_acudiente2" value
 * @method string              getEspecificacionesMedicas()  Returns the current record's "especificaciones_medicas" value
 * @method string              getObservaciones()            Returns the current record's "observaciones" value
 * @method string              getFotoPath()                 Returns the current record's "foto_path" value
 * @method integer             getIdSfGuardUser()            Returns the current record's "id_sf_guard_user" value
 * @method integer             getIdTipoSangre()             Returns the current record's "id_tipo_sangre" value
 * @method TipoDocumento       getTipoDocumento()            Returns the current record's "TipoDocumento" value
 * @method TipoSangre          getTipoSangre()               Returns the current record's "TipoSangre" value
 * @method Doctrine_Collection getAsignaturaCursada()        Returns the current record's "AsignaturaCursada" collection
 * @method Doctrine_Collection getEstudiante()               Returns the current record's "Estudiante" collection
 * @method Doctrine_Collection getFotoUsuario()              Returns the current record's "FotoUsuario" collection
 * @method Doctrine_Collection getInscrito()                 Returns the current record's "Inscrito" collection
 * @method Doctrine_Collection getLibPrestamo()              Returns the current record's "LibPrestamo" collection
 * @method Doctrine_Collection getLibPrestamo2()             Returns the current record's "LibPrestamo_2" collection
 * @method Doctrine_Collection getLibSancion()               Returns the current record's "LibSancion" collection
 * @method Doctrine_Collection getLibSancion2()              Returns the current record's "LibSancion_2" collection
 * @method Doctrine_Collection getParcial()                  Returns the current record's "Parcial" collection
 * @method Doctrine_Collection getProfesor()                 Returns the current record's "Profesor" collection
 * @method Doctrine_Collection getUsuarioHasRefElemento()    Returns the current record's "UsuarioHasRefElemento" collection
 * @method Doctrine_Collection getRefPrestamo()              Returns the current record's "RefPrestamo" collection
 * @method Doctrine_Collection getRefPrestamo2()             Returns the current record's "RefPrestamo_2" collection
 * @method Doctrine_Collection getRefSancion()               Returns the current record's "RefSancion" collection
 * @method Doctrine_Collection getRefHojaVida()              Returns the current record's "RefHojaVida" collection
 * @method Doctrine_Collection getNotificacion()             Returns the current record's "Notificacion" collection
 * @method Doctrine_Collection getRefElemento()              Returns the current record's "RefElemento" collection
 * @method Doctrine_Collection getRefMantenimiento()         Returns the current record's "RefMantenimiento" collection
 * @method Doctrine_Collection getHomologacion()             Returns the current record's "Homologacion" collection
 * @method Usuario             setIdUsuario()                Sets the current record's "id_usuario" value
 * @method Usuario             setPrimerNombre()             Sets the current record's "primer_nombre" value
 * @method Usuario             setSegundoNombre()            Sets the current record's "segundo_nombre" value
 * @method Usuario             setPrimerApellido()           Sets the current record's "primer_apellido" value
 * @method Usuario             setSegundoApellido()          Sets the current record's "segundo_apellido" value
 * @method Usuario             setDocumento()                Sets the current record's "documento" value
 * @method Usuario             setIdTipoDocumento()          Sets the current record's "id_tipo_documento" value
 * @method Usuario             setLugarExpedicion()          Sets the current record's "lugar_expedicion" value
 * @method Usuario             setFechaNacimiento()          Sets the current record's "fecha_nacimiento" value
 * @method Usuario             setGenero()                   Sets the current record's "genero" value
 * @method Usuario             setTelefono1()                Sets the current record's "telefono1" value
 * @method Usuario             setTelefono2()                Sets the current record's "telefono2" value
 * @method Usuario             setDireccion()                Sets the current record's "direccion" value
 * @method Usuario             setCorreo()                   Sets the current record's "correo" value
 * @method Usuario             setAcudiente1()               Sets the current record's "acudiente1" value
 * @method Usuario             setTelefonoAcudiente1()       Sets the current record's "telefono_acudiente1" value
 * @method Usuario             setAcudiente2()               Sets the current record's "acudiente2" value
 * @method Usuario             setTelefonoAcudiente2()       Sets the current record's "telefono_acudiente2" value
 * @method Usuario             setEspecificacionesMedicas()  Sets the current record's "especificaciones_medicas" value
 * @method Usuario             setObservaciones()            Sets the current record's "observaciones" value
 * @method Usuario             setFotoPath()                 Sets the current record's "foto_path" value
 * @method Usuario             setIdSfGuardUser()            Sets the current record's "id_sf_guard_user" value
 * @method Usuario             setIdTipoSangre()             Sets the current record's "id_tipo_sangre" value
 * @method Usuario             setTipoDocumento()            Sets the current record's "TipoDocumento" value
 * @method Usuario             setTipoSangre()               Sets the current record's "TipoSangre" value
 * @method Usuario             setAsignaturaCursada()        Sets the current record's "AsignaturaCursada" collection
 * @method Usuario             setEstudiante()               Sets the current record's "Estudiante" collection
 * @method Usuario             setFotoUsuario()              Sets the current record's "FotoUsuario" collection
 * @method Usuario             setInscrito()                 Sets the current record's "Inscrito" collection
 * @method Usuario             setLibPrestamo()              Sets the current record's "LibPrestamo" collection
 * @method Usuario             setLibPrestamo2()             Sets the current record's "LibPrestamo_2" collection
 * @method Usuario             setLibSancion()               Sets the current record's "LibSancion" collection
 * @method Usuario             setLibSancion2()              Sets the current record's "LibSancion_2" collection
 * @method Usuario             setParcial()                  Sets the current record's "Parcial" collection
 * @method Usuario             setProfesor()                 Sets the current record's "Profesor" collection
 * @method Usuario             setUsuarioHasRefElemento()    Sets the current record's "UsuarioHasRefElemento" collection
 * @method Usuario             setRefPrestamo()              Sets the current record's "RefPrestamo" collection
 * @method Usuario             setRefPrestamo2()             Sets the current record's "RefPrestamo_2" collection
 * @method Usuario             setRefSancion()               Sets the current record's "RefSancion" collection
 * @method Usuario             setRefHojaVida()              Sets the current record's "RefHojaVida" collection
 * @method Usuario             setNotificacion()             Sets the current record's "Notificacion" collection
 * @method Usuario             setRefElemento()              Sets the current record's "RefElemento" collection
 * @method Usuario             setRefMantenimiento()         Sets the current record's "RefMantenimiento" collection
 * @method Usuario             setHomologacion()             Sets the current record's "Homologacion" collection
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('id_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('primer_nombre', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('segundo_nombre', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('primer_apellido', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('segundo_apellido', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('documento', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('id_tipo_documento', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('lugar_expedicion', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('fecha_nacimiento', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('genero', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('telefono1', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('telefono2', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('direccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('correo', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('acudiente1', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('telefono_acudiente1', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('acudiente2', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('telefono_acudiente2', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('especificaciones_medicas', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('observaciones', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('foto_path', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('id_sf_guard_user', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_tipo_sangre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TipoDocumento', array(
             'local' => 'id_tipo_documento',
             'foreign' => 'id_tipo_documento'));

        $this->hasOne('TipoSangre', array(
             'local' => 'id_tipo_sangre',
             'foreign' => 'id_tipo_sangre'));

        $this->hasMany('AsignaturaCursada', array(
             'local' => 'id_usuario',
             'foreign' => 'id_asignador'));

        $this->hasMany('Estudiante', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('FotoUsuario', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('Inscrito', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('LibPrestamo', array(
             'local' => 'id_usuario',
             'foreign' => 'id_prestamista'));

        $this->hasMany('LibPrestamo as LibPrestamo_2', array(
             'local' => 'id_usuario',
             'foreign' => 'id_solicitante'));

        $this->hasMany('LibSancion', array(
             'local' => 'id_usuario',
             'foreign' => 'id_ejecutor'));

        $this->hasMany('LibSancion as LibSancion_2', array(
             'local' => 'id_usuario',
             'foreign' => 'id_sancionado'));

        $this->hasMany('Parcial', array(
             'local' => 'id_usuario',
             'foreign' => 'id_calificador'));

        $this->hasMany('Profesor', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('UsuarioHasRefElemento', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('RefPrestamo', array(
             'local' => 'id_usuario',
             'foreign' => 'id_prestamista'));

        $this->hasMany('RefPrestamo as RefPrestamo_2', array(
             'local' => 'id_usuario',
             'foreign' => 'id_solicitante'));

        $this->hasMany('RefSancion', array(
             'local' => 'id_usuario',
             'foreign' => 'id_ejecutor'));

        $this->hasMany('RefHojaVida', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario_creador'));

        $this->hasMany('Notificacion', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('RefElemento', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario_responsable'));

        $this->hasMany('RefMantenimiento', array(
             'local' => 'id_usuario',
             'foreign' => 'id_asignador'));

        $this->hasMany('Homologacion', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}