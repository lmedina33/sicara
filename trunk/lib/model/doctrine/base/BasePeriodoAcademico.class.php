<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PeriodoAcademico', 'doctrine');

/**
 * BasePeriodoAcademico
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_periodo_academico
 * @property string $periodo
 * @property date $fecha_inicio
 * @property date $fecha_fin
 * @property integer $estado
 * @property string $codigo_pensum
 * @property integer $id_predecesor
 * @property string $observacion
 * @property Pensum $Pensum
 * @property Doctrine_Collection $AsignaturaCursada
 * @property Doctrine_Collection $Inscrito
 * @property Doctrine_Collection $Matricula
 * 
 * @method integer             getIdPeriodoAcademico()   Returns the current record's "id_periodo_academico" value
 * @method string              getPeriodo()              Returns the current record's "periodo" value
 * @method date                getFechaInicio()          Returns the current record's "fecha_inicio" value
 * @method date                getFechaFin()             Returns the current record's "fecha_fin" value
 * @method integer             getEstado()               Returns the current record's "estado" value
 * @method string              getCodigoPensum()         Returns the current record's "codigo_pensum" value
 * @method integer             getIdPredecesor()         Returns the current record's "id_predecesor" value
 * @method string              getObservacion()          Returns the current record's "observacion" value
 * @method Pensum              getPensum()               Returns the current record's "Pensum" value
 * @method Doctrine_Collection getAsignaturaCursada()    Returns the current record's "AsignaturaCursada" collection
 * @method Doctrine_Collection getInscrito()             Returns the current record's "Inscrito" collection
 * @method Doctrine_Collection getMatricula()            Returns the current record's "Matricula" collection
 * @method PeriodoAcademico    setIdPeriodoAcademico()   Sets the current record's "id_periodo_academico" value
 * @method PeriodoAcademico    setPeriodo()              Sets the current record's "periodo" value
 * @method PeriodoAcademico    setFechaInicio()          Sets the current record's "fecha_inicio" value
 * @method PeriodoAcademico    setFechaFin()             Sets the current record's "fecha_fin" value
 * @method PeriodoAcademico    setEstado()               Sets the current record's "estado" value
 * @method PeriodoAcademico    setCodigoPensum()         Sets the current record's "codigo_pensum" value
 * @method PeriodoAcademico    setIdPredecesor()         Sets the current record's "id_predecesor" value
 * @method PeriodoAcademico    setObservacion()          Sets the current record's "observacion" value
 * @method PeriodoAcademico    setPensum()               Sets the current record's "Pensum" value
 * @method PeriodoAcademico    setAsignaturaCursada()    Sets the current record's "AsignaturaCursada" collection
 * @method PeriodoAcademico    setInscrito()             Sets the current record's "Inscrito" collection
 * @method PeriodoAcademico    setMatricula()            Sets the current record's "Matricula" collection
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePeriodoAcademico extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('periodo_academico');
        $this->hasColumn('id_periodo_academico', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('periodo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('fecha_inicio', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_fin', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('estado', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('codigo_pensum', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('id_predecesor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Pensum', array(
             'local' => 'codigo_pensum',
             'foreign' => 'codigo_pensum'));

        $this->hasMany('AsignaturaCursada', array(
             'local' => 'id_periodo_academico',
             'foreign' => 'id_periodo'));

        $this->hasMany('Inscrito', array(
             'local' => 'id_periodo_academico',
             'foreign' => 'id_periodo'));

        $this->hasMany('Matricula', array(
             'local' => 'id_periodo_academico',
             'foreign' => 'id_periodo'));
    }
}