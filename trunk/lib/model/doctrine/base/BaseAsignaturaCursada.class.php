<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AsignaturaCursada', 'doctrine');

/**
 * BaseAsignaturaCursada
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_asignatura_cursada
 * @property float $nota_asignatura_cursada
 * @property float $nota_habilitacion_asignatura_cursada
 * @property float $nota_nivelacion_asignatura_cursada
 * @property integer $is_homologacion
 * @property integer $asistencia
 * @property string $observaciones
 * @property string $codigo_estudiante
 * @property string $codigo_asignatura
 * @property float $nota_aprobatoria
 * @property integer $is_aprobada
 * @property integer $id_periodo
 * @property integer $id_asignador
 * @property integer $id_asignatura_homologada
 * @property Asignatura $Asignatura
 * @property Estudiante $Estudiante
 * @property PeriodoAcademico $PeriodoAcademico
 * @property Usuario $Usuario
 * @property Doctrine_Collection $Parcial
 * @property AsignaturaHomologada $AsignaturaHomologada
 * 
 * @method integer              getIdAsignaturaCursada()                  Returns the current record's "id_asignatura_cursada" value
 * @method float                getNotaAsignaturaCursada()                Returns the current record's "nota_asignatura_cursada" value
 * @method float                getNotaHabilitacionAsignaturaCursada()    Returns the current record's "nota_habilitacion_asignatura_cursada" value
 * @method float                getNotaNivelacionAsignaturaCursada()      Returns the current record's "nota_nivelacion_asignatura_cursada" value
 * @method integer              getIsHomologacion()                       Returns the current record's "is_homologacion" value
 * @method integer              getAsistencia()                           Returns the current record's "asistencia" value
 * @method string               getObservaciones()                        Returns the current record's "observaciones" value
 * @method string               getCodigoEstudiante()                     Returns the current record's "codigo_estudiante" value
 * @method string               getCodigoAsignatura()                     Returns the current record's "codigo_asignatura" value
 * @method float                getNotaAprobatoria()                      Returns the current record's "nota_aprobatoria" value
 * @method integer              getIsAprobada()                           Returns the current record's "is_aprobada" value
 * @method integer              getIdPeriodo()                            Returns the current record's "id_periodo" value
 * @method integer              getIdAsignador()                          Returns the current record's "id_asignador" value
 * @method integer              getIdAsignaturaHomologada()               Returns the current record's "id_asignatura_homologada" value
 * @method Asignatura           getAsignatura()                           Returns the current record's "Asignatura" value
 * @method Estudiante           getEstudiante()                           Returns the current record's "Estudiante" value
 * @method PeriodoAcademico     getPeriodoAcademico()                     Returns the current record's "PeriodoAcademico" value
 * @method Usuario              getUsuario()                              Returns the current record's "Usuario" value
 * @method Doctrine_Collection  getParcial()                              Returns the current record's "Parcial" collection
 * @method AsignaturaHomologada getAsignaturaHomologada()                 Returns the current record's "AsignaturaHomologada" value
 * @method AsignaturaCursada    setIdAsignaturaCursada()                  Sets the current record's "id_asignatura_cursada" value
 * @method AsignaturaCursada    setNotaAsignaturaCursada()                Sets the current record's "nota_asignatura_cursada" value
 * @method AsignaturaCursada    setNotaHabilitacionAsignaturaCursada()    Sets the current record's "nota_habilitacion_asignatura_cursada" value
 * @method AsignaturaCursada    setNotaNivelacionAsignaturaCursada()      Sets the current record's "nota_nivelacion_asignatura_cursada" value
 * @method AsignaturaCursada    setIsHomologacion()                       Sets the current record's "is_homologacion" value
 * @method AsignaturaCursada    setAsistencia()                           Sets the current record's "asistencia" value
 * @method AsignaturaCursada    setObservaciones()                        Sets the current record's "observaciones" value
 * @method AsignaturaCursada    setCodigoEstudiante()                     Sets the current record's "codigo_estudiante" value
 * @method AsignaturaCursada    setCodigoAsignatura()                     Sets the current record's "codigo_asignatura" value
 * @method AsignaturaCursada    setNotaAprobatoria()                      Sets the current record's "nota_aprobatoria" value
 * @method AsignaturaCursada    setIsAprobada()                           Sets the current record's "is_aprobada" value
 * @method AsignaturaCursada    setIdPeriodo()                            Sets the current record's "id_periodo" value
 * @method AsignaturaCursada    setIdAsignador()                          Sets the current record's "id_asignador" value
 * @method AsignaturaCursada    setIdAsignaturaHomologada()               Sets the current record's "id_asignatura_homologada" value
 * @method AsignaturaCursada    setAsignatura()                           Sets the current record's "Asignatura" value
 * @method AsignaturaCursada    setEstudiante()                           Sets the current record's "Estudiante" value
 * @method AsignaturaCursada    setPeriodoAcademico()                     Sets the current record's "PeriodoAcademico" value
 * @method AsignaturaCursada    setUsuario()                              Sets the current record's "Usuario" value
 * @method AsignaturaCursada    setParcial()                              Sets the current record's "Parcial" collection
 * @method AsignaturaCursada    setAsignaturaHomologada()                 Sets the current record's "AsignaturaHomologada" value
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAsignaturaCursada extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asignatura_cursada');
        $this->hasColumn('id_asignatura_cursada', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nota_asignatura_cursada', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('nota_habilitacion_asignatura_cursada', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('nota_nivelacion_asignatura_cursada', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('is_homologacion', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('asistencia', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('observaciones', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('codigo_estudiante', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('codigo_asignatura', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('nota_aprobatoria', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('is_aprobada', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_periodo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_asignador', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_asignatura_homologada', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Asignatura', array(
             'local' => 'codigo_asignatura',
             'foreign' => 'codigo_asignatura'));

        $this->hasOne('Estudiante', array(
             'local' => 'codigo_estudiante',
             'foreign' => 'codigo_estudiante'));

        $this->hasOne('PeriodoAcademico', array(
             'local' => 'id_periodo',
             'foreign' => 'id_periodo_academico'));

        $this->hasOne('Usuario', array(
             'local' => 'id_asignador',
             'foreign' => 'id_usuario'));

        $this->hasMany('Parcial', array(
             'local' => 'id_asignatura_cursada',
             'foreign' => 'id_asignatura_cursada'));

        $this->hasOne('AsignaturaHomologada', array(
             'local' => 'id_asignatura_homologada',
             'foreign' => 'id_asignatura_homologada'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}