<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AsignaturaHomologada', 'doctrine');

/**
 * BaseAsignaturaHomologada
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_asignatura_homologada
 * @property string $nombre
 * @property float $calificacion
 * @property float $nota_aprobatoria
 * @property string $observaciones
 * @property string $codigo_asignatura
 * @property integer $id_homologacion
 * @property integer $id_sf_guard_user
 * @property Asignatura $Asignatura
 * @property Homologacion $Homologacion
 * @property Doctrine_Collection $AsignaturaHomologada
 * @property Doctrine_Collection $AsignaturaCursada
 * 
 * @method integer              getIdAsignaturaHomologada()   Returns the current record's "id_asignatura_homologada" value
 * @method string               getNombre()                   Returns the current record's "nombre" value
 * @method float                getCalificacion()             Returns the current record's "calificacion" value
 * @method float                getNotaAprobatoria()          Returns the current record's "nota_aprobatoria" value
 * @method string               getObservaciones()            Returns the current record's "observaciones" value
 * @method string               getCodigoAsignatura()         Returns the current record's "codigo_asignatura" value
 * @method integer              getIdHomologacion()           Returns the current record's "id_homologacion" value
 * @method integer              getIdSfGuardUser()            Returns the current record's "id_sf_guard_user" value
 * @method Asignatura           getAsignatura()               Returns the current record's "Asignatura" value
 * @method Homologacion         getHomologacion()             Returns the current record's "Homologacion" value
 * @method Doctrine_Collection  getAsignaturaHomologada()     Returns the current record's "AsignaturaHomologada" collection
 * @method Doctrine_Collection  getAsignaturaCursada()        Returns the current record's "AsignaturaCursada" collection
 * @method AsignaturaHomologada setIdAsignaturaHomologada()   Sets the current record's "id_asignatura_homologada" value
 * @method AsignaturaHomologada setNombre()                   Sets the current record's "nombre" value
 * @method AsignaturaHomologada setCalificacion()             Sets the current record's "calificacion" value
 * @method AsignaturaHomologada setNotaAprobatoria()          Sets the current record's "nota_aprobatoria" value
 * @method AsignaturaHomologada setObservaciones()            Sets the current record's "observaciones" value
 * @method AsignaturaHomologada setCodigoAsignatura()         Sets the current record's "codigo_asignatura" value
 * @method AsignaturaHomologada setIdHomologacion()           Sets the current record's "id_homologacion" value
 * @method AsignaturaHomologada setIdSfGuardUser()            Sets the current record's "id_sf_guard_user" value
 * @method AsignaturaHomologada setAsignatura()               Sets the current record's "Asignatura" value
 * @method AsignaturaHomologada setHomologacion()             Sets the current record's "Homologacion" value
 * @method AsignaturaHomologada setAsignaturaHomologada()     Sets the current record's "AsignaturaHomologada" collection
 * @method AsignaturaHomologada setAsignaturaCursada()        Sets the current record's "AsignaturaCursada" collection
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAsignaturaHomologada extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asignatura_homologada');
        $this->hasColumn('id_asignatura_homologada', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('calificacion', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('nota_aprobatoria', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('observaciones', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('codigo_asignatura', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('id_homologacion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_sf_guard_user', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Asignatura', array(
             'local' => 'codigo_asignatura',
             'foreign' => 'codigo_asignatura'));

        $this->hasOne('Homologacion', array(
             'local' => 'id_homologacion',
             'foreign' => 'id_homologacion'));

        $this->hasMany('AsignaturaHomologada', array(
             'local' => 'id_asignatura_homologada',
             'foreign' => 'id_asignatura_homologada'));

        $this->hasMany('AsignaturaCursada', array(
             'local' => 'id_asignatura_homologada',
             'foreign' => 'id_asignatura_homologada'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}