<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FotoUsuario', 'doctrine');

/**
 * BaseFotoUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_foto_usuario
 * @property string $nombre
 * @property string $tipo
 * @property date $fecha
 * @property blob $imagen
 * @property integer $id_usuario
 * @property Usuario $Usuario
 * 
 * @method integer     getIdFotoUsuario()   Returns the current record's "id_foto_usuario" value
 * @method string      getNombre()          Returns the current record's "nombre" value
 * @method string      getTipo()            Returns the current record's "tipo" value
 * @method date        getFecha()           Returns the current record's "fecha" value
 * @method blob        getImagen()          Returns the current record's "imagen" value
 * @method integer     getIdUsuario()       Returns the current record's "id_usuario" value
 * @method Usuario     getUsuario()         Returns the current record's "Usuario" value
 * @method FotoUsuario setIdFotoUsuario()   Sets the current record's "id_foto_usuario" value
 * @method FotoUsuario setNombre()          Sets the current record's "nombre" value
 * @method FotoUsuario setTipo()            Sets the current record's "tipo" value
 * @method FotoUsuario setFecha()           Sets the current record's "fecha" value
 * @method FotoUsuario setImagen()          Sets the current record's "imagen" value
 * @method FotoUsuario setIdUsuario()       Sets the current record's "id_usuario" value
 * @method FotoUsuario setUsuario()         Sets the current record's "Usuario" value
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFotoUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('foto_usuario');
        $this->hasColumn('id_foto_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('tipo', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('imagen', 'blob', null, array(
             'type' => 'blob',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('id_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}