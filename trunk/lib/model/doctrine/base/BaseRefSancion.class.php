<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RefSancion', 'doctrine');

/**
 * BaseRefSancion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_ref_sancion
 * @property float $cantidad
 * @property integer $id_ref_elemento
 * @property timestamp $fecha_imposicion
 * @property timestamp $fecha_inicio
 * @property timestamp $fecha_fin
 * @property string $observaciones
 * @property integer $id_sancionado
 * @property integer $id_ejecutor
 * @property integer $id_ref_tipo_sancion
 * @property RefTipoSancion $RefTipoSancion
 * @property Usuario $Usuario
 * @property Usuario $Usuario_2
 * @property RefElemento $RefElemento
 * 
 * @method integer        getIdRefSancion()        Returns the current record's "id_ref_sancion" value
 * @method float          getCantidad()            Returns the current record's "cantidad" value
 * @method integer        getIdRefElemento()       Returns the current record's "id_ref_elemento" value
 * @method timestamp      getFechaImposicion()     Returns the current record's "fecha_imposicion" value
 * @method timestamp      getFechaInicio()         Returns the current record's "fecha_inicio" value
 * @method timestamp      getFechaFin()            Returns the current record's "fecha_fin" value
 * @method string         getObservaciones()       Returns the current record's "observaciones" value
 * @method integer        getIdSancionado()        Returns the current record's "id_sancionado" value
 * @method integer        getIdEjecutor()          Returns the current record's "id_ejecutor" value
 * @method integer        getIdRefTipoSancion()    Returns the current record's "id_ref_tipo_sancion" value
 * @method RefTipoSancion getRefTipoSancion()      Returns the current record's "RefTipoSancion" value
 * @method Usuario        getUsuario()             Returns the current record's "Usuario" value
 * @method Usuario        getUsuario2()            Returns the current record's "Usuario_2" value
 * @method RefElemento    getRefElemento()         Returns the current record's "RefElemento" value
 * @method RefSancion     setIdRefSancion()        Sets the current record's "id_ref_sancion" value
 * @method RefSancion     setCantidad()            Sets the current record's "cantidad" value
 * @method RefSancion     setIdRefElemento()       Sets the current record's "id_ref_elemento" value
 * @method RefSancion     setFechaImposicion()     Sets the current record's "fecha_imposicion" value
 * @method RefSancion     setFechaInicio()         Sets the current record's "fecha_inicio" value
 * @method RefSancion     setFechaFin()            Sets the current record's "fecha_fin" value
 * @method RefSancion     setObservaciones()       Sets the current record's "observaciones" value
 * @method RefSancion     setIdSancionado()        Sets the current record's "id_sancionado" value
 * @method RefSancion     setIdEjecutor()          Sets the current record's "id_ejecutor" value
 * @method RefSancion     setIdRefTipoSancion()    Sets the current record's "id_ref_tipo_sancion" value
 * @method RefSancion     setRefTipoSancion()      Sets the current record's "RefTipoSancion" value
 * @method RefSancion     setUsuario()             Sets the current record's "Usuario" value
 * @method RefSancion     setUsuario2()            Sets the current record's "Usuario_2" value
 * @method RefSancion     setRefElemento()         Sets the current record's "RefElemento" value
 * 
 * @package    sicara2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRefSancion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ref_sancion');
        $this->hasColumn('id_ref_sancion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cantidad', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_ref_elemento', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha_imposicion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_inicio', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_fin', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('observaciones', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('id_sancionado', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_ejecutor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_ref_tipo_sancion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RefTipoSancion', array(
             'local' => 'id_ref_tipo_sancion',
             'foreign' => 'id_ref_tipo_sancion'));

        $this->hasOne('Usuario', array(
             'local' => 'id_ejecutor',
             'foreign' => 'id_usuario'));

        $this->hasOne('Usuario as Usuario_2', array(
             'local' => 'id_sancionado',
             'foreign' => 'id_usuario'));

        $this->hasOne('RefElemento', array(
             'local' => 'id_ref_elemento',
             'foreign' => 'id_ref_elemento'));
    }
}